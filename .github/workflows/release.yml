name: "release"

on:
  push:
    branches: [ release ]

env:
  GODOT_VERSION: 3.3
  GODOT_VERSION_MAC: 3.3
  EXPORT_NAME: Pixelorama
  TAG: v0.8.3
  BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

jobs:
  export-windows:
    name: Windows Export 🗔
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.3
    steps:
      - name: Setup WINE and rcedit 🍷
        run: |
          dpkg --add-architecture i386 && apt-get update && apt-get install -y wine-stable && apt-get install -y wine32
          chown root:root -R ~
          wget https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe
          mkdir -v -p ~/.local/share/rcedit
          mv rcedit-x64.exe ~/.local/share/rcedit
          godot -q
          echo 'export/windows/wine = "/usr/bin/wine"' >> ~/.config/godot/editor_settings-3.tres
          echo 'export/windows/rcedit = "/github/home/.local/share/rcedit/rcedit-x64.exe"' >> ~/.config/godot/editor_settings-3.tres
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/windows-64bit build/windows-32bit ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build 🔧
        run: |
          godot -v --export "Windows Desktop 64-bit" ./build/windows-64bit/$EXPORT_NAME.exe
          godot -v --export "Windows Desktop 32-bit" ./build/windows-32bit/$EXPORT_NAME.exe
      - name: Copy pixelorama_data folder 📁
        run: |
          cp -R ./pixelorama_data ./build/windows-64bit
          rm ./build/windows-64bit/pixelorama_data/.gdignore
          cp -R ./pixelorama_data ./build/windows-32bit
          rm ./build/windows-32bit/pixelorama_data/.gdignore
      - name: Zip 🗜️
        run: |
          cd build
          zip -r windows-64bit.zip windows-64bit
          zip -r windows-32bit.zip windows-32bit
      - name: Upload 64-bit Release Asset 🚀
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/windows-64bit.zip
          asset_name: ${{env.EXPORT_NAME}}[Windows-64bit].zip
          tag: ${{env.TAG}}
          overwrite: true
      - name: Upload 32-bit Release Asset 🚀
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/windows-32bit.zip
          asset_name: ${{env.EXPORT_NAME}}[Windows-32bit].zip
          tag: ${{env.TAG}}
          overwrite: true
      - name: Upload Release Assets to itch.io 🎮
        run: |
          butler push ./build/windows-64bit ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:windows-64 --userversion ${{env.TAG}}
          butler push ./build/windows-32bit ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:windows-32 --userversion ${{env.TAG}}

  export-linux:
    name: Linux Export 🐧
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.3
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/linux-64bit build/linux-32bit ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build 🔧
        run: |
          godot -v --export "Linux/X11 64-bit" ./build/linux-64bit/$EXPORT_NAME.x86_64
          godot -v --export "Linux/X11 32-bit" ./build/linux-32bit/$EXPORT_NAME.x86
      - name: Give execute permission ☑️
        run: |
          chmod +x ./build/linux-64bit/$EXPORT_NAME.x86_64
          chmod +x ./build/linux-32bit/$EXPORT_NAME.x86
      - name: Copy pixelorama_data folder 📁
        run: |
          cp -R ./pixelorama_data ./build/linux-64bit
          rm ./build/linux-64bit/pixelorama_data/.gdignore
          cp -R ./pixelorama_data ./build/linux-32bit
          rm ./build/linux-32bit/pixelorama_data/.gdignore
      - name: Create tar.gz archive 🗜️
        run: |
          cd build
          tar zcvf linux-64bit.tar.gz linux-64bit
          tar zcvf linux-32bit.tar.gz linux-32bit
      - name: Upload 64-bit Release Asset 🚀
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/linux-64bit.tar.gz
          asset_name: ${{env.EXPORT_NAME}}[Linux-64bit].tar.gz
          tag: ${{env.TAG}}
          overwrite: true
      - name: Upload 32-bit Release Asset 🚀
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/linux-32bit.tar.gz
          asset_name: ${{env.EXPORT_NAME}}[Linux-32bit].tar.gz
          tag: ${{env.TAG}}
          overwrite: true
      - name: Upload Release Assets to itch.io 🎮
        run: |
          butler push ./build/linux-64bit.tar.gz ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:linux-64 --userversion ${{env.TAG}}
          butler push ./build/linux-32bit.tar.gz ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:linux-32 --userversion ${{env.TAG}}

  export-mac:
    name: Mac Export 🍎
    runs-on: macos-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup environment 🔧
        run: |
          export GODOT_VERSION=3.3
          export EXPORT_NAME=Pixelorama
      - name: Download and extract export templates 💾
        run: |
          mkdir -v -p ~/.local/share/godot/templates/${GODOT_VERSION_MAC}.stable
          curl -O https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION_MAC}/Godot_v${GODOT_VERSION_MAC}-stable_export_templates.tpz
          unzip -a Godot_v${GODOT_VERSION_MAC}-stable_export_templates.tpz
          mv ./templates/* ~/.local/share/godot/templates/${GODOT_VERSION_MAC}.stable
      - name: Download Godot headless binary 🤖
        run: |
          wget https://github.com/huskeee/godot-headless-mac/releases/download/3.3-stable/Godot_v3.3-stable_mac_headless.64.zip
          unzip -a Godot_v${GODOT_VERSION_MAC}-stable_mac_headless.64.zip
      - name: Setup 💻
        run: mkdir -v -p ./build/mac
      - name: Mac Build 🔧
        run: |
          chown runner ./Godot
          chmod +x ./Godot
          ./Godot -v --export "Mac OSX" ./build/mac/Pixelorama.zip
      - name: Make application executable 🔧
        run: |
          unzip -a ./build/mac/Pixelorama.zip -d ./build/mac
          chmod +x ./build/mac/Pixelorama.app/Contents/MacOS/Pixelorama
          rm ./build/mac/Pixelorama.zip
      - name: Fix application icon 🖼
        run: sips -s format icns ./build/mac/Pixelorama.app/Contents/Resources/icon.icns --out ./build/mac/Pixelorama.app/Contents/Resources/icon.icns
      - name: Copy pixelorama_data folder 📁
        run: |
          cp -R ./pixelorama_data ./build/mac/Pixelorama.app/Contents/MacOS
          rm ./build/mac/Pixelorama.app/Contents/MacOS/pixelorama_data/.gdignore
      - name: Create DMG archive 🔧
        run: hdiutil create -srcfolder ./build/mac -volname Pixelorama ./build/mac/Pixelorama.dmg
      - name: Upload Release Asset 🚀
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/mac/Pixelorama.dmg
          asset_name: ${{env.EXPORT_NAME}}[Mac].dmg
          tag: ${{env.TAG}}
          overwrite: true
      - name: Upload Release Assets to itch.io 🎮
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x butler
          ./butler push ./build/mac/Pixelorama.dmg ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:mac --userversion ${{env.TAG}}
    
  export-web:
    name: Web Export 🌐
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.3
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build 🔧
        run: godot -v --export "HTML5" ./build/web/index.html
      - name: Install rsync 📚
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build/web # The folder the action should deploy.
      - name: Upload Release Assets to itch.io 🎮
        run: |
          butler push ./build/web ${{ secrets.ITCHIO_USERNAME }}/${{ secrets.ITCHIO_GAME }}:web --userversion ${{env.TAG}}
