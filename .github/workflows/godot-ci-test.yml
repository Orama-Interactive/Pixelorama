name: "godot-ci-test"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths-ignore: "Translations/*"

env:
  GODOT_VERSION: 3.2.2
  EXPORT_NAME: Pixelorama

jobs:
  export-windows:
    name: Windows Export 🗔
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.2.2
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/windows-64bit  ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build 🔧
        run: godot -v --export "Windows Desktop 64-bit" ./build/windows-64bit/$EXPORT_NAME.exe
      - name: Copy pixelorama folder 📁
        run: |
          cp -R ./pixelorama ./build/windows-64bit
          rm ./build/windows-64bit/pixelorama/.gdignore
      - name: Upload Artifact 🚀
        uses: actions/upload-artifact@v1
        with:
          name: Windows-64bit
          path: ./build/windows-64bit/

  export-linux:
    name: Linux Export 🐧
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.2.2
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/linux-64bit ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Linux Build 🔧
        run: godot -v --export "Linux/X11 64-bit" ./build/linux-64bit/$EXPORT_NAME.x86_64
      - name: Copy pixelorama folder 📁
        run: |
          cp -R ./pixelorama ./build/linux-64bit
          rm ./build/linux-64bit/pixelorama/.gdignore
      - name: Upload Artifact 🚀
        uses: actions/upload-artifact@v1
        with:
          name: Linux-64bit
          path: ./build/linux-64bit/

  export-mac:
    name: Mac Export 🍎
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.2.2
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/mac ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Mac Build 🔧
        run: godot -v --export "Mac OSX" ./build/mac/$EXPORT_NAME.zip
      - name: Upload Artifact 🚀
        uses: actions/upload-artifact@v1
        with:
          name: Mac
          path: ./build/mac/

  export-web:
    name: Web Export 🌐
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:3.2.2
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Setup 💻
        run: |
          mkdir -v -p build/web ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build 🔧
        run: godot -v --export "HTML5" ./build/web/index.html
      - name: Install rsync 📚
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build/web # The folder the action should deploy.
          TARGET_FOLDER: early_access
